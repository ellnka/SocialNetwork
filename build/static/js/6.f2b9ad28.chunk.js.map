{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Users/Users.jsx","components/common/Pagination/PageItem.jsx","components/common/Pagination/PagePrev.jsx","components/common/Pagination/PageNext.jsx","components/common/Pagination/Pagination.jsx","components/common/Pagination/PaginationContainer.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","Users","props","userElements","users","map","user","className","key","to","id","name","PageItem","page","currentPage","onHandleChangePage","liClass","href","onClick","PagePrev","onPreviousPageClick","aria-label","aria-hidden","PageNext","onNextPageClick","Pagination","pageSize","totalUserCount","pageCount","Math","ceil","initPage","floor","useState","setPage","pageBlocks","pageElements","block","assign","items","pageItem","pagePrevItem","unshift","pageNextItem","renderPagination","connect","state","usersPage","setCurrentPage","getUsers","getUsersThunkCreator","console","log","pageNumber","getPageSize","getTotalUserCount","getCurrentPage","getIsFetching","isFetching","setUsers","requestUsers","useEffect","Preloader"],"mappings":"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","file":"static/js/6.f2b9ad28.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Users = (props) => {\r\n  const userElements = props.users && props.users.map(\r\n    (user, i) =>\r\n      <div className='list-group-item' key={i}> <NavLink to={'/profile/' + user.id}> {user.name} </NavLink> </div>\r\n  )\r\n\r\n  return (\r\n    <div className='list-group'>\r\n      {userElements}\r\n    </div>\r\n  )\r\n}\r\n\r\nUsers.propTypes = {\r\n  users: PropTypes.array\r\n}\r\n\r\nexport default Users\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst PageItem = ({ page, currentPage, onHandleChangePage }) => {\r\n  const liClass = (page === currentPage ? 'page-item disabled' : 'page-item')\r\n  return (\r\n    <li className={liClass} key={page}>\r\n      <a className='page-link' href='#' onClick={() => { onHandleChangePage(page) }} key={page} value={page}>\r\n        {page}\r\n      </a>\r\n    </li>\r\n  )\r\n}\r\n\r\nPageItem.propTypes = {\r\n  page: PropTypes.number,\r\n  currentPage: PropTypes.number,\r\n  onHandleChangePage: PropTypes.func\r\n}\r\n\r\nexport default PageItem\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst PagePrev = ({ page, onPreviousPageClick }) => {\r\n  return (\r\n    <li className='page-item' onClick={() => { onPreviousPageClick() }} key={page}>\r\n      <a className='page-link' href='#' aria-label='Previous' key={page}>\r\n        <span aria-hidden='true'>&laquo;</span>\r\n        <span className='sr-only'>Previous</span>\r\n      </a>\r\n    </li>\r\n  )\r\n}\r\n\r\nPagePrev.propTypes = {\r\n  page: PropTypes.number,\r\n  onPreviousPageClick: PropTypes.func\r\n}\r\n\r\nexport default PagePrev\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst PageNext = ({ page, onNextPageClick }) => {\r\n  return (\r\n    <li className='page-item' onClick={() => { onNextPageClick() }} key={page}>\r\n      <a className='page-link' href='#' aria-label='Next' key={page}>\r\n        <span aria-hidden='true'>&raquo;</span>\r\n        <span className='sr-only'>Next</span>\r\n      </a>\r\n    </li>\r\n  )\r\n}\r\n\r\nPageNext.propTypes = {\r\n  page: PropTypes.number,\r\n  onNextPageClick: PropTypes.func\r\n}\r\n\r\nexport default PageNext\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport PageItem from './PageItem'\r\nimport PagePrev from './PagePrev'\r\nimport PageNext from './PageNext'\r\n\r\nconst MAX_PAGE_COUNT = 20\r\n\r\nconst Pagination = ({ pageSize, totalUserCount, currentPage, onHandleChangePage }) => {\r\n  const pageCount = Math.ceil(totalUserCount / pageSize)\r\n  const initPage = Math.floor(currentPage / MAX_PAGE_COUNT)\r\n  const [page, setPage] = useState(initPage)\r\n  const pageBlocks = []\r\n\r\n  const onPreviousPageClick = () => {\r\n    setPage(page - 1)\r\n    onHandleChangePage(pageBlocks[page][0])\r\n  }\r\n\r\n  const onNextPageClick = () => {\r\n    setPage(page + 1)\r\n    onHandleChangePage(pageBlocks[page][0])\r\n  }\r\n\r\n  const renderPagination = () => {\r\n    if (!pageCount) return null\r\n\r\n    let block = []\r\n    for (let i = 1; i <= pageCount; i++) {\r\n      block.push(i)\r\n      if (block.length >= MAX_PAGE_COUNT || i === pageCount) {\r\n        pageBlocks.push(block)\r\n        block = Object.assign([])\r\n      }\r\n    }\r\n\r\n    const items = []\r\n    for (let i = 0; i < pageBlocks[page].length; i++) {\r\n      const pageItem = <PageItem page={pageBlocks[page][i]} currentPage={currentPage} onHandleChangePage={onHandleChangePage} />\r\n      items.push(pageItem)\r\n    }\r\n\r\n    if (pageCount > MAX_PAGE_COUNT && page > 0) {\r\n      const pagePrevItem = <PagePrev page={page} onPreviousPageClick={onPreviousPageClick} />\r\n      items.unshift(pagePrevItem)\r\n    }\r\n\r\n    if (pageCount > MAX_PAGE_COUNT && page < pageBlocks.length - 1) {\r\n      const pageNextItem = <PageNext page={page} onNextPageClick={onNextPageClick} />\r\n      items.push(pageNextItem)\r\n    }\r\n    return items\r\n  }\r\n\r\n  const pageElements = renderPagination()\r\n  return (\r\n    <div>\r\n      <ul className='pagination pagination-sm' value={totalUserCount}>\r\n        {pageElements}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nPagination.propTypes = {\r\n  pageSize: PropTypes.number,\r\n  totalUserCount: PropTypes.number,\r\n  currentPage: PropTypes.number,\r\n  onHandleChangePage: PropTypes.func\r\n}\r\n\r\nexport default Pagination\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { setCurrentPage, getUsersThunkCreator } from './../../../redux/users-reducer'\r\n\r\nimport Pagination from './Pagination'\r\n\r\nconst PaginationContainer = ({ pageSize, totalUserCount, currentPage, setCurrentPage, getUsers }) => {\r\n  console.log(currentPage)\r\n\r\n  const handleChangePage = (pageNumber) => {\r\n    setCurrentPage(pageNumber)\r\n    getUsers(pageNumber, pageSize)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Pagination\r\n        totalUserCount={totalUserCount}\r\n        pageSize={pageSize}\r\n        currentPage={currentPage}\r\n        onHandleChangePage={handleChangePage}\r\n      />\r\n    </div>)\r\n}\r\n\r\nPaginationContainer.propTypes = {\r\n  pageSize: PropTypes.number,\r\n  totalUserCount: PropTypes.number,\r\n  currentPage: PropTypes.number,\r\n  getUsers: PropTypes.func,\r\n  setCurrentPage: PropTypes.func\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  pageSize: state.usersPage.pageSize,\r\n  totalUserCount: state.usersPage.totalUserCount,\r\n  currentPage: state.usersPage.currentPage\r\n})\r\n\r\nexport default connect(mapStateToProps, { setCurrentPage, getUsers: getUsersThunkCreator })(PaginationContainer)\r\n","// import { createSelector } from 'reselect'\r\n\r\nexport const getUsers = (state) => state.usersPage.users\r\nexport const getPageSize = (state) => state.usersPage.pageSize\r\nexport const getTotalUserCount = (state) => state.usersPage.totalUserCount\r\nexport const getCurrentPage = (state) => state.usersPage.currentPage\r\nexport const getIsFetching = (state) => state.usersPage.isFetching\r\n\r\n// export const getUsersSuper = createSelector(getUsers, getIsFetching, (users, isFetching) => users.map(u => u))\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  setUsers,\r\n  setCurrentPage,\r\n  getUsersThunkCreator\r\n} from '../../redux/users-reducer'\r\nimport Users from './Users'\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport PaginationContainer from './../common/Pagination/PaginationContainer'\r\nimport { getUsers, getPageSize, getTotalUserCount, getCurrentPage, getIsFetching } from '../../redux/users-selectors'\r\n\r\nconst UsersContainer = ({ users, pageSize, totalUserCount, currentPage, isFetching, requestUsers, setCurrentPage }) => {\r\n  useEffect(() => { requestUsers(currentPage, pageSize) }, [currentPage, pageSize, requestUsers])\r\n\r\n  const handleChangePage = (pageNumber) => {\r\n    setCurrentPage(pageNumber)\r\n    requestUsers(pageNumber, pageSize)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {isFetching ? <Preloader /> : null}\r\n      <PaginationContainer />\r\n      <Users\r\n        totalUserCount={totalUserCount}\r\n        pageSize={pageSize}\r\n        currentPage={currentPage}\r\n        users={users}\r\n        onHandleChangePage={handleChangePage}\r\n      />\r\n    </div>)\r\n}\r\n\r\nUsersContainer.propTypes = {\r\n  users: PropTypes.array,\r\n  pageSize: PropTypes.number,\r\n  totalUserCount: PropTypes.number,\r\n  currentPage: PropTypes.number,\r\n  isFetching: PropTypes.bool,\r\n  requestUsers: PropTypes.func,\r\n  setCurrentPage: PropTypes.func\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  users: getUsers(state),\r\n  pageSize: getPageSize(state),\r\n  totalUserCount: getTotalUserCount(state),\r\n  currentPage: getCurrentPage(state),\r\n  isFetching: getIsFetching(state)\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, {\r\n    setUsers,\r\n    setCurrentPage,\r\n    requestUsers: getUsersThunkCreator\r\n  })(UsersContainer)\r\n"],"sourceRoot":""}